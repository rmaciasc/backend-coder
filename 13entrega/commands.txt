nodemon src/main.js -m FORK -p 4300
nodemon src/main.js -m CLUSTER -p 4300

forever start src/main.js -m FORK -p 8080
forever start src/main.js -m CLUSTER -p 8080
PS taskkill /pid <PID> /f

pm2 start src/main.js --name="server-fork" --watch -- -p 8080
pm2 start src/main.js --name="server-cluster" --watch -i max -- -p 8081
pm2 delete all

sudo systemctl restart nginx

#ARTILLERY
Correr con console.log() en routes.js /info
artillery quick --count 50 -n 20 http://localhost:8080/info > artillery_result_consolelog.txt
Correr sin console.log() en routes.js /info
artillery quick --count 50 -n 20 http://localhost:8080/info > artillery_result_sin_consolelog.txt

Artillery con console.log en /info tom칩 una media de 22ms en correr mientras que sin console.log tomo s칩lo una media de 4ms por cada request.

#PROFILING
node --prof-process console_log-v8.log > result_console_log.txt
node --prof-process sin_console_log-v8.log > result_sin_console_log.txt

Al utilizar el profiling de node, en los archivos de resultado se puede apreciar que el proceso con console.log contiene m치s ticks que el proceso con console.log, por lo que el proceso sin console.log es m치s eficiente.